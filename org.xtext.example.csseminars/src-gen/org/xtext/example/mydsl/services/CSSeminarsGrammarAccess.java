/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class CSSeminarsGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DepartmentSeminarsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DepartmentSeminars");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cGroupsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cGroupsGroupParserRuleCall_0_0 = (RuleCall)cGroupsAssignment_0.eContents().get(0);
		private final Assignment cUsersAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUsersMemberParserRuleCall_1_0 = (RuleCall)cUsersAssignment_1.eContents().get(0);
		private final Assignment cSeminarsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSeminarsSeminarParserRuleCall_2_0 = (RuleCall)cSeminarsAssignment_2.eContents().get(0);
		
		//DepartmentSeminars:
		//	groups+=Group* users+=Member* seminars+=Seminar*;
		@Override public ParserRule getRule() { return rule; }

		//groups+=Group* users+=Member* seminars+=Seminar*
		public Group getGroup() { return cGroup; }

		//groups+=Group*
		public Assignment getGroupsAssignment_0() { return cGroupsAssignment_0; }

		//Group
		public RuleCall getGroupsGroupParserRuleCall_0_0() { return cGroupsGroupParserRuleCall_0_0; }

		//users+=Member*
		public Assignment getUsersAssignment_1() { return cUsersAssignment_1; }

		//Member
		public RuleCall getUsersMemberParserRuleCall_1_0() { return cUsersMemberParserRuleCall_1_0; }

		//seminars+=Seminar*
		public Assignment getSeminarsAssignment_2() { return cSeminarsAssignment_2; }

		//Seminar
		public RuleCall getSeminarsSeminarParserRuleCall_2_0() { return cSeminarsSeminarParserRuleCall_2_0; }
	}

	public class GroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Group");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGroupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		
		//Group:
		//	"group" name=ID description=STRING;
		@Override public ParserRule getRule() { return rule; }

		//"group" name=ID description=STRING
		public Group getGroup() { return cGroup; }

		//"group"
		public Keyword getGroupKeyword_0() { return cGroupKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
	}

	public class MemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Member");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMemberKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cSurnameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSurnameIDTerminalRuleCall_2_0 = (RuleCall)cSurnameAssignment_2.eContents().get(0);
		private final Assignment cGroupAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cGroupGroupCrossReference_3_0 = (CrossReference)cGroupAssignment_3.eContents().get(0);
		private final RuleCall cGroupGroupIDTerminalRuleCall_3_0_1 = (RuleCall)cGroupGroupCrossReference_3_0.eContents().get(1);
		
		//Member:
		//	"member" name=ID surname=ID group=[Group];
		@Override public ParserRule getRule() { return rule; }

		//"member" name=ID surname=ID group=[Group]
		public Group getGroup() { return cGroup; }

		//"member"
		public Keyword getMemberKeyword_0() { return cMemberKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//surname=ID
		public Assignment getSurnameAssignment_2() { return cSurnameAssignment_2; }

		//ID
		public RuleCall getSurnameIDTerminalRuleCall_2_0() { return cSurnameIDTerminalRuleCall_2_0; }

		//group=[Group]
		public Assignment getGroupAssignment_3() { return cGroupAssignment_3; }

		//[Group]
		public CrossReference getGroupGroupCrossReference_3_0() { return cGroupGroupCrossReference_3_0; }

		//ID
		public RuleCall getGroupGroupIDTerminalRuleCall_3_0_1() { return cGroupGroupIDTerminalRuleCall_3_0_1; }
	}

	public class SeminarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Seminar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSeminarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleIDTerminalRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOrganizersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cOrganizersMemberCrossReference_3_0 = (CrossReference)cOrganizersAssignment_3.eContents().get(0);
		private final RuleCall cOrganizersMemberIDTerminalRuleCall_3_0_1 = (RuleCall)cOrganizersMemberCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOrganizersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cOrganizersMemberCrossReference_4_1_0 = (CrossReference)cOrganizersAssignment_4_1.eContents().get(0);
		private final RuleCall cOrganizersMemberIDTerminalRuleCall_4_1_0_1 = (RuleCall)cOrganizersMemberCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cDateKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cDATETerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cDurationKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final RuleCall cHOURTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cTalksAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTalksTalkParserRuleCall_10_0 = (RuleCall)cTalksAssignment_10.eContents().get(0);
		
		//Seminar:
		//	"seminar" title=ID "(" organizers+=[Member] ("," organizers+=[Member])* ")" "date" DATE "duration" HOUR talks+=Talk+;
		@Override public ParserRule getRule() { return rule; }

		//"seminar" title=ID "(" organizers+=[Member] ("," organizers+=[Member])* ")" "date" DATE "duration" HOUR talks+=Talk+
		public Group getGroup() { return cGroup; }

		//"seminar"
		public Keyword getSeminarKeyword_0() { return cSeminarKeyword_0; }

		//title=ID
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }

		//ID
		public RuleCall getTitleIDTerminalRuleCall_1_0() { return cTitleIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//organizers+=[Member]
		public Assignment getOrganizersAssignment_3() { return cOrganizersAssignment_3; }

		//[Member]
		public CrossReference getOrganizersMemberCrossReference_3_0() { return cOrganizersMemberCrossReference_3_0; }

		//ID
		public RuleCall getOrganizersMemberIDTerminalRuleCall_3_0_1() { return cOrganizersMemberIDTerminalRuleCall_3_0_1; }

		//("," organizers+=[Member])*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//organizers+=[Member]
		public Assignment getOrganizersAssignment_4_1() { return cOrganizersAssignment_4_1; }

		//[Member]
		public CrossReference getOrganizersMemberCrossReference_4_1_0() { return cOrganizersMemberCrossReference_4_1_0; }

		//ID
		public RuleCall getOrganizersMemberIDTerminalRuleCall_4_1_0_1() { return cOrganizersMemberIDTerminalRuleCall_4_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//"date"
		public Keyword getDateKeyword_6() { return cDateKeyword_6; }

		//DATE
		public RuleCall getDATETerminalRuleCall_7() { return cDATETerminalRuleCall_7; }

		//"duration"
		public Keyword getDurationKeyword_8() { return cDurationKeyword_8; }

		//HOUR
		public RuleCall getHOURTerminalRuleCall_9() { return cHOURTerminalRuleCall_9; }

		//talks+=Talk+
		public Assignment getTalksAssignment_10() { return cTalksAssignment_10; }

		//Talk
		public RuleCall getTalksTalkParserRuleCall_10_0() { return cTalksTalkParserRuleCall_10_0; }
	}

	public class TalkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Talk");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTalkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleIDTerminalRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPresentersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cPresentersMemberCrossReference_3_0 = (CrossReference)cPresentersAssignment_3.eContents().get(0);
		private final RuleCall cPresentersMemberIDTerminalRuleCall_3_0_1 = (RuleCall)cPresentersMemberCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPresentersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cPresentersMemberCrossReference_4_1_0 = (CrossReference)cPresentersAssignment_4_1.eContents().get(0);
		private final RuleCall cPresentersMemberIDTerminalRuleCall_4_1_0_1 = (RuleCall)cPresentersMemberCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cAbstractKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cSTRINGTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cDurationKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cDurationAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cDurationHOURTerminalRuleCall_8_1_0 = (RuleCall)cDurationAssignment_8_1.eContents().get(0);
		
		//Talk:
		//	"talk" title=ID "(" presenters+=[Member] ("," presenters+=[Member])* ")" "abstract" STRING ("duration"
		//	duration=HOUR)?;
		@Override public ParserRule getRule() { return rule; }

		//"talk" title=ID "(" presenters+=[Member] ("," presenters+=[Member])* ")" "abstract" STRING ("duration" duration=HOUR)?
		public Group getGroup() { return cGroup; }

		//"talk"
		public Keyword getTalkKeyword_0() { return cTalkKeyword_0; }

		//title=ID
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }

		//ID
		public RuleCall getTitleIDTerminalRuleCall_1_0() { return cTitleIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//presenters+=[Member]
		public Assignment getPresentersAssignment_3() { return cPresentersAssignment_3; }

		//[Member]
		public CrossReference getPresentersMemberCrossReference_3_0() { return cPresentersMemberCrossReference_3_0; }

		//ID
		public RuleCall getPresentersMemberIDTerminalRuleCall_3_0_1() { return cPresentersMemberIDTerminalRuleCall_3_0_1; }

		//("," presenters+=[Member])*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//presenters+=[Member]
		public Assignment getPresentersAssignment_4_1() { return cPresentersAssignment_4_1; }

		//[Member]
		public CrossReference getPresentersMemberCrossReference_4_1_0() { return cPresentersMemberCrossReference_4_1_0; }

		//ID
		public RuleCall getPresentersMemberIDTerminalRuleCall_4_1_0_1() { return cPresentersMemberIDTerminalRuleCall_4_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//"abstract"
		public Keyword getAbstractKeyword_6() { return cAbstractKeyword_6; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_7() { return cSTRINGTerminalRuleCall_7; }

		//("duration" duration=HOUR)?
		public Group getGroup_8() { return cGroup_8; }

		//"duration"
		public Keyword getDurationKeyword_8_0() { return cDurationKeyword_8_0; }

		//duration=HOUR
		public Assignment getDurationAssignment_8_1() { return cDurationAssignment_8_1; }

		//HOUR
		public RuleCall getDurationHOURTerminalRuleCall_8_1_0() { return cDurationHOURTerminalRuleCall_8_1_0; }
	}
	
	
	private final DepartmentSeminarsElements pDepartmentSeminars;
	private final GroupElements pGroup;
	private final MemberElements pMember;
	private final SeminarElements pSeminar;
	private final TalkElements pTalk;
	private final TerminalRule tDATE;
	private final TerminalRule tHOUR;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public CSSeminarsGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDepartmentSeminars = new DepartmentSeminarsElements();
		this.pGroup = new GroupElements();
		this.pMember = new MemberElements();
		this.pSeminar = new SeminarElements();
		this.pTalk = new TalkElements();
		this.tDATE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DATE");
		this.tHOUR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "HOUR");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.CSSeminars".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DepartmentSeminars:
	//	groups+=Group* users+=Member* seminars+=Seminar*;
	public DepartmentSeminarsElements getDepartmentSeminarsAccess() {
		return pDepartmentSeminars;
	}
	
	public ParserRule getDepartmentSeminarsRule() {
		return getDepartmentSeminarsAccess().getRule();
	}

	//Group:
	//	"group" name=ID description=STRING;
	public GroupElements getGroupAccess() {
		return pGroup;
	}
	
	public ParserRule getGroupRule() {
		return getGroupAccess().getRule();
	}

	//Member:
	//	"member" name=ID surname=ID group=[Group];
	public MemberElements getMemberAccess() {
		return pMember;
	}
	
	public ParserRule getMemberRule() {
		return getMemberAccess().getRule();
	}

	//Seminar:
	//	"seminar" title=ID "(" organizers+=[Member] ("," organizers+=[Member])* ")" "date" DATE "duration" HOUR talks+=Talk+;
	public SeminarElements getSeminarAccess() {
		return pSeminar;
	}
	
	public ParserRule getSeminarRule() {
		return getSeminarAccess().getRule();
	}

	//Talk:
	//	"talk" title=ID "(" presenters+=[Member] ("," presenters+=[Member])* ")" "abstract" STRING ("duration"
	//	duration=HOUR)?;
	public TalkElements getTalkAccess() {
		return pTalk;
	}
	
	public ParserRule getTalkRule() {
		return getTalkAccess().getRule();
	}

	//terminal DATE:
	//	INT "/" INT "/" INT;
	public TerminalRule getDATERule() {
		return tDATE;
	} 

	//terminal HOUR:
	//	INT ":" INT;
	public TerminalRule getHOURRule() {
		return tHOUR;
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
