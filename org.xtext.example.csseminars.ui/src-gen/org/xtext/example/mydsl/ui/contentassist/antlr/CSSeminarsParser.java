/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.mydsl.services.CSSeminarsGrammarAccess;

public class CSSeminarsParser extends AbstractContentAssistParser {
	
	@Inject
	private CSSeminarsGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalCSSeminarsParser createParser() {
		org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalCSSeminarsParser result = new org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalCSSeminarsParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDepartmentSeminarsAccess().getGroup(), "rule__DepartmentSeminars__Group__0");
					put(grammarAccess.getGroupAccess().getGroup(), "rule__Group__Group__0");
					put(grammarAccess.getMemberAccess().getGroup(), "rule__Member__Group__0");
					put(grammarAccess.getSeminarAccess().getGroup(), "rule__Seminar__Group__0");
					put(grammarAccess.getSeminarAccess().getGroup_4(), "rule__Seminar__Group_4__0");
					put(grammarAccess.getTalkAccess().getGroup(), "rule__Talk__Group__0");
					put(grammarAccess.getTalkAccess().getGroup_4(), "rule__Talk__Group_4__0");
					put(grammarAccess.getTalkAccess().getGroup_8(), "rule__Talk__Group_8__0");
					put(grammarAccess.getDepartmentSeminarsAccess().getGroupsAssignment_0(), "rule__DepartmentSeminars__GroupsAssignment_0");
					put(grammarAccess.getDepartmentSeminarsAccess().getUsersAssignment_1(), "rule__DepartmentSeminars__UsersAssignment_1");
					put(grammarAccess.getDepartmentSeminarsAccess().getSeminarsAssignment_2(), "rule__DepartmentSeminars__SeminarsAssignment_2");
					put(grammarAccess.getGroupAccess().getNameAssignment_1(), "rule__Group__NameAssignment_1");
					put(grammarAccess.getGroupAccess().getDescriptionAssignment_2(), "rule__Group__DescriptionAssignment_2");
					put(grammarAccess.getMemberAccess().getNameAssignment_1(), "rule__Member__NameAssignment_1");
					put(grammarAccess.getMemberAccess().getSurnameAssignment_2(), "rule__Member__SurnameAssignment_2");
					put(grammarAccess.getMemberAccess().getGroupAssignment_3(), "rule__Member__GroupAssignment_3");
					put(grammarAccess.getSeminarAccess().getTitleAssignment_1(), "rule__Seminar__TitleAssignment_1");
					put(grammarAccess.getSeminarAccess().getOrganizersAssignment_3(), "rule__Seminar__OrganizersAssignment_3");
					put(grammarAccess.getSeminarAccess().getOrganizersAssignment_4_1(), "rule__Seminar__OrganizersAssignment_4_1");
					put(grammarAccess.getSeminarAccess().getTalksAssignment_10(), "rule__Seminar__TalksAssignment_10");
					put(grammarAccess.getTalkAccess().getTitleAssignment_1(), "rule__Talk__TitleAssignment_1");
					put(grammarAccess.getTalkAccess().getPresentersAssignment_3(), "rule__Talk__PresentersAssignment_3");
					put(grammarAccess.getTalkAccess().getPresentersAssignment_4_1(), "rule__Talk__PresentersAssignment_4_1");
					put(grammarAccess.getTalkAccess().getDurationAssignment_8_1(), "rule__Talk__DurationAssignment_8_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalCSSeminarsParser typedParser = (org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalCSSeminarsParser) parser;
			typedParser.entryRuleDepartmentSeminars();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public CSSeminarsGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(CSSeminarsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
